// <auto-generated />
using System;
using Lab6TestTask.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab6TestTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251031080737_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Lab6TestTask.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Cement",
                            Price = 6.50m,
                            Quantity = 500,
                            ReceivedDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            WarehouseId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Bricks",
                            Price = 0.45m,
                            Quantity = 10000,
                            ReceivedDate = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            WarehouseId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Steel Rebars",
                            Price = 2.10m,
                            Quantity = 2000,
                            ReceivedDate = new DateTime(2025, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            WarehouseId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Timber Planks",
                            Price = 15.00m,
                            Quantity = 1500,
                            ReceivedDate = new DateTime(2025, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            WarehouseId = 2
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Roof Tiles",
                            Price = 1.20m,
                            Quantity = 4000,
                            ReceivedDate = new DateTime(2025, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            WarehouseId = 3
                        },
                        new
                        {
                            ProductId = 6,
                            Name = "Paint Buckets",
                            Price = 25.00m,
                            Quantity = 600,
                            ReceivedDate = new DateTime(2025, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            WarehouseId = 3
                        },
                        new
                        {
                            ProductId = 7,
                            Name = "Hammer",
                            Price = 12.00m,
                            Quantity = 300,
                            ReceivedDate = new DateTime(2025, 10, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            WarehouseId = 4
                        },
                        new
                        {
                            ProductId = 8,
                            Name = "Electric Drill",
                            Price = 80.00m,
                            Quantity = 150,
                            ReceivedDate = new DateTime(2025, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 3,
                            WarehouseId = 4
                        },
                        new
                        {
                            ProductId = 9,
                            Name = "Ladder",
                            Price = 60.00m,
                            Quantity = 100,
                            ReceivedDate = new DateTime(2025, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            WarehouseId = 5
                        },
                        new
                        {
                            ProductId = 10,
                            Name = "Wheelbarrow",
                            Price = 95.00m,
                            Quantity = 70,
                            ReceivedDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 1,
                            WarehouseId = 5
                        });
                });

            modelBuilder.Entity("Lab6TestTask.Models.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WarehouseId"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            Location = "Berlin",
                            Name = "Warehouse 1"
                        },
                        new
                        {
                            WarehouseId = 2,
                            Location = "Paris",
                            Name = "Warehouse 2"
                        },
                        new
                        {
                            WarehouseId = 3,
                            Location = "Rome",
                            Name = "Warehouse 3"
                        },
                        new
                        {
                            WarehouseId = 4,
                            Location = "Warsaw",
                            Name = "Warehouse 4"
                        },
                        new
                        {
                            WarehouseId = 5,
                            Location = "Madrid",
                            Name = "Warehouse 5"
                        });
                });

            modelBuilder.Entity("Lab6TestTask.Models.Product", b =>
                {
                    b.HasOne("Lab6TestTask.Models.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("Lab6TestTask.Models.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
